package it.unisalento.se.saw.domain;
// Generated 21-lug-2018 11.44.51 by Hibernate Tools 5.2.0.Final


import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonManagedReference;

/**
 * Report generated by hbm2java
 */
@Entity
@Table(name="report"
    ,catalog="mydb"
)
@JsonIgnoreProperties({"hibernateLazyInitializer","handler"})
public class Report  implements java.io.Serializable {

	 @JsonManagedReference
     private Integer idReport;
     private Classroom classroom;
     private Reportstatus reportstatus;
     private User userBySecretaryIdSecretary;
     private User userByProfessorIdProfessor;
     private String problemDescription;
     private String note;

    public Report() {
    }

	
    public Report(Classroom classroom, Reportstatus reportstatus, User userByProfessorIdProfessor) {
        this.classroom = classroom;
        this.reportstatus = reportstatus;
        this.userByProfessorIdProfessor = userByProfessorIdProfessor;
    }
    public Report(Classroom classroom, Reportstatus reportstatus, User userBySecretaryIdSecretary, User userByProfessorIdProfessor, String problemDescription, String note) {
       this.classroom = classroom;
       this.reportstatus = reportstatus;
       this.userBySecretaryIdSecretary = userBySecretaryIdSecretary;
       this.userByProfessorIdProfessor = userByProfessorIdProfessor;
       this.problemDescription = problemDescription;
       this.note = note;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="idReport", unique=true, nullable=false)
    public Integer getIdReport() {
        return this.idReport;
    }
    
    public void setIdReport(Integer idReport) {
        this.idReport = idReport;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="Classroom_idClassroom", nullable=false)
    public Classroom getClassroom() {
        return this.classroom;
    }
    
    public void setClassroom(Classroom classroom) {
        this.classroom = classroom;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="Reportstatus_idreportStatus", nullable=false)
    public Reportstatus getReportstatus() {
        return this.reportstatus;
    }
    
    public void setReportstatus(Reportstatus reportstatus) {
        this.reportstatus = reportstatus;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="secretary_idSecretary")
    public User getUserBySecretaryIdSecretary() {
        return this.userBySecretaryIdSecretary;
    }
    
    public void setUserBySecretaryIdSecretary(User userBySecretaryIdSecretary) {
        this.userBySecretaryIdSecretary = userBySecretaryIdSecretary;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="professor_idProfessor", nullable=false)
    public User getUserByProfessorIdProfessor() {
        return this.userByProfessorIdProfessor;
    }
    
    public void setUserByProfessorIdProfessor(User userByProfessorIdProfessor) {
        this.userByProfessorIdProfessor = userByProfessorIdProfessor;
    }

    
    @Column(name="problemDescription", length=200)
    public String getProblemDescription() {
        return this.problemDescription;
    }
    
    public void setProblemDescription(String problemDescription) {
        this.problemDescription = problemDescription;
    }

    
    @Column(name="note", length=200)
    public String getNote() {
        return this.note;
    }
    
    public void setNote(String note) {
        this.note = note;
    }




}


