package it.unisalento.se.saw.domain;
// Generated 21-lug-2018 11.44.51 by Hibernate Tools 5.2.0.Final


import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.OneToMany;
import javax.persistence.Table;

import com.fasterxml.jackson.annotation.JsonBackReference;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonManagedReference;

/**
 * Studycourse generated by hbm2java
 */
@Entity
@Table(name="studycourse"
    ,catalog="mydb"
)
@JsonIgnoreProperties({"hibernateLazyInitializer","handler"})
public class Studycourse  implements java.io.Serializable {

	 @JsonManagedReference
     private Integer idStudyCourse;
     private String name;
     private String description;
     @JsonBackReference
     private Set<Teaching> teachings = new HashSet<Teaching>(0);
     @JsonBackReference
     private Set<Calendar> calendars = new HashSet<Calendar>(0);
     @JsonBackReference
     private Set<User> users = new HashSet<User>(0);

    public Studycourse() {
    }

    public Studycourse(String name, String description, Set<Teaching> teachings, Set<Calendar> calendars, Set<User> users) {
       this.name = name;
       this.description = description;
       this.teachings = teachings;
       this.calendars = calendars;
       this.users = users;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="idStudyCourse", unique=true, nullable=false)
    public Integer getIdStudyCourse() {
        return this.idStudyCourse;
    }
    
    public void setIdStudyCourse(Integer idStudyCourse) {
        this.idStudyCourse = idStudyCourse;
    }

    
    @Column(name="name", length=45)
    public String getName() {
        return this.name;
    }
    
    public void setName(String name) {
        this.name = name;
    }

    
    @Column(name="description", length=100)
    public String getDescription() {
        return this.description;
    }
    
    public void setDescription(String description) {
        this.description = description;
    }

@ManyToMany(fetch=FetchType.LAZY)
    @JoinTable(name="studycourse_has_teaching", catalog="mydb", joinColumns = { 
        @JoinColumn(name="StudyCourse_idStudyCourse", nullable=false, updatable=false) }, inverseJoinColumns = { 
        @JoinColumn(name="Teaching_idTeaching", nullable=false, updatable=false) })
    public Set<Teaching> getTeachings() {
        return this.teachings;
    }
    
    public void setTeachings(Set<Teaching> teachings) {
        this.teachings = teachings;
    }

@ManyToMany(fetch=FetchType.LAZY)
    @JoinTable(name="calendar_has_studycourse", catalog="mydb", joinColumns = { 
        @JoinColumn(name="StudyCourse_idStudyCourse", nullable=false, updatable=false) }, inverseJoinColumns = { 
        @JoinColumn(name="Calendar_idCalendar", nullable=false, updatable=false) })
    public Set<Calendar> getCalendars() {
        return this.calendars;
    }
    
    public void setCalendars(Set<Calendar> calendars) {
        this.calendars = calendars;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="studycourse")
    public Set<User> getUsers() {
        return this.users;
    }
    
    public void setUsers(Set<User> users) {
        this.users = users;
    }




}


