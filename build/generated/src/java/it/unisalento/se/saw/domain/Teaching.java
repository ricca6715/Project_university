package it.unisalento.se.saw.domain;
// Generated 29-ago-2018 12.34.20 by Hibernate Tools 5.2.0.Final


import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

import com.fasterxml.jackson.annotation.JsonBackReference;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonManagedReference;

/**
 * Teaching generated by hbm2java
 */
@Entity
@Table(name="teaching"
    ,catalog="mydb"
)
@JsonIgnoreProperties({"hibernateLazyInitializer","handler"})
public class Teaching  implements java.io.Serializable {

	@JsonManagedReference
     private Integer idTeaching;
     private User user;
     private String name;
     private Integer cfu;
     private Integer courseYear;
     @JsonBackReference
     private Set<User> users = new HashSet<User>(0);
     @JsonBackReference
     private Set<Exam> exams = new HashSet<Exam>(0);
     @JsonBackReference
     private Set<Lecture> lectures = new HashSet<Lecture>(0);
     @JsonBackReference
     private Set<Studycourse> studycourses = new HashSet<Studycourse>(0);

    public Teaching() {
    }

	
    public Teaching(User user) {
        this.user = user;
    }
    public Teaching(User user, String name, Integer cfu, Integer courseYear, Set<User> users, Set<Exam> exams, Set<Lecture> lectures, Set<Studycourse> studycourses) {
       this.user = user;
       this.name = name;
       this.cfu = cfu;
       this.courseYear = courseYear;
       this.users = users;
       this.exams = exams;
       this.lectures = lectures;
       this.studycourses = studycourses;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="idTeaching", unique=true, nullable=false)
    public Integer getIdTeaching() {
        return this.idTeaching;
    }
    
    public void setIdTeaching(Integer idTeaching) {
        this.idTeaching = idTeaching;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="docente_idDocente", nullable=false)
    public User getUser() {
        return this.user;
    }
    
    public void setUser(User user) {
        this.user = user;
    }

    
    @Column(name="name", length=45)
    public String getName() {
        return this.name;
    }
    
    public void setName(String name) {
        this.name = name;
    }

    
    @Column(name="cfu")
    public Integer getCfu() {
        return this.cfu;
    }
    
    public void setCfu(Integer cfu) {
        this.cfu = cfu;
    }

    
    @Column(name="CourseYear")
    public Integer getCourseYear() {
        return this.courseYear;
    }
    
    public void setCourseYear(Integer courseYear) {
        this.courseYear = courseYear;
    }

@ManyToMany(fetch=FetchType.LAZY)
    @JoinTable(name="teaching_has_users", catalog="mydb", joinColumns = { 
        @JoinColumn(name="Teaching_idTeaching", nullable=false, updatable=false) }, inverseJoinColumns = { 
        @JoinColumn(name="student_idStudent", nullable=false, updatable=false) })
    public Set<User> getUsers() {
        return this.users;
    }
    
    public void setUsers(Set<User> users) {
        this.users = users;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="teaching")
    public Set<Exam> getExams() {
        return this.exams;
    }
    
    public void setExams(Set<Exam> exams) {
        this.exams = exams;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="teaching")
    public Set<Lecture> getLectures() {
        return this.lectures;
    }
    
    public void setLectures(Set<Lecture> lectures) {
        this.lectures = lectures;
    }

@ManyToMany(fetch=FetchType.LAZY)
    @JoinTable(name="studycourse_has_teaching", catalog="mydb", joinColumns = { 
        @JoinColumn(name="Teaching_idTeaching", nullable=false, updatable=false) }, inverseJoinColumns = { 
        @JoinColumn(name="StudyCourse_idStudyCourse", nullable=false, updatable=false) })
    public Set<Studycourse> getStudycourses() {
        return this.studycourses;
    }
    
    public void setStudycourses(Set<Studycourse> studycourses) {
        this.studycourses = studycourses;
    }




}


